generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                  String         @id @default(auto()) @map("_id") @db.ObjectId
  email               String         @unique
  password            String
  name                String
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  role                Role           @default(USER)
  refreshTokens       RefreshToken[]
  tasksAssignedToUser Task[]         @relation("TaskAssignedToUser")
  tasksCreatedByUser  Task[]         @relation("TaskCreatedByUser")
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId

  @@index([userId], name: "userId_index")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model Task {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String?
  dueDate          DateTime
  sortOrder        Float        @default(1)
  status           TaskStatus   @default(TODO)
  priority         TaskPriority @default(MEDIUM)
  isArchived       Boolean      @default(false)
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  assignedToUser   User         @relation(fields: [assignedToUserId], references: [id], name: "TaskAssignedToUser")
  assignedToUserId String       @db.ObjectId
  createdByUser    User         @relation(fields: [createdByUserId], references: [id], name: "TaskCreatedByUser")
  createdByUserId  String       @db.ObjectId

  @@index([assignedToUserId, status, isArchived], name: "userId_status_isArchived_index")
  @@index([sortOrder], name: "sortOrder_index")
}
