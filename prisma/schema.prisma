generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  email         String         @unique
  password      String
  name          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  role          Role           @default(USER)
  refreshTokens RefreshToken[]
  task          Task[]
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  @@index([userId], name: "userId_index")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model Task {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  dueDate     DateTime
  sortOrder   Float        @default(1)
  status      TaskStatus   @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  isArchived  Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
  userId      String       @db.ObjectId

  @@index([userId, status, isArchived], name: "userId_status_isArchived_index")
  @@index([sortOrder], name: "userId_sortOrder_index")
}
